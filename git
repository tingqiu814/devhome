git rev-parse命令
git rev-parse --git-dir 显示版本库.git目录所在位置
git rev-parse --show-toplevel   显示工作区根目录
git rev-parse --show-prefix 所在目录相对于工作区根目录的相对目录
git rev-parse --show-cdup   显示从当前目录后退到工作区的根的身度
显示分支
$ git rev-parse --symbolic --branches
显示里程碑
$ git rev-parse --symbolic --tags
显示引用
$ git rev-parse --symbolic --glob=refs/*
显示SHA1值
$ git rev-parse HEAD
$ git rev-parse master refs/heads/master
$ git rev-parse $git rev-parse A^{} A^0 A^{commit}


chapter 4
[root@localhost ~]# git config --global user.name 'chenqinggao'
[root@localhost ~]# git config --global user.email 'hello@chenqinggao.com'

[root@localhost ~]# git config --system alias.st status
[root@localhost ~]# git config --global alias.ci commit

[root@localhost ~]# git config --global color.ui true

[root@localhost ~]# mkdir -p /path/to/my/workspace/demo/
[root@localhost ~]# cd /path/to/my/workspace/demo/
[root@localhost demo]# git init 
[root@localhost demo]# rm -rf .git/ && cd .. && git init demo && cd demo

[root@localhost demo]# echo 'Hello.' > welcome.txt
[root@localhost demo]# git add welcome.txt
[root@localhost demo]# git commit -m "initialized."

[root@localhost demo]# cd /path/to/my/workspace/demo/
[root@localhost demo]# ls -aF
./  ../  a/  .git/  welcome.txt
[root@localhost demo]# git status
[root@localhost demo]# mkdir -p a/b/c
[root@localhost demo]# cd /path/to/my/workspace/demo/a/b/c

[root@localhost c]# git rev-parse --git-dir
/path/to/my/workspace/demo/.git
[root@localhost c]# git rev-parse --show-toplevel
/path/to/my/workspace/demo
[root@localhost c]# git rev-parse --show-prefix
a/b/c/


[root@localhost demo]# git config -e
[root@localhost demo]# cat .git/config 
[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
[root@localhost demo]# git config -e --global
[root@localhost demo]# cat ~/.gitconfig 
[alias]
    st = status
    ci = commit
[user]
    name = chenqinggao
    email = hello@chenqinggao.com
[color]
    ui = true
[root@localhost demo]# git config -e --system
[root@localhost demo]# cat /etc/gitconfig 
[alias]
    ci = commit
    st = status

[root@localhost demo]# git config core.bare 
false
[root@localhost demo]# git config a.b something
[root@localhost demo]# git config x.y.z others
[root@localhost demo]# cat .git/config 
[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
[a]
    b = something
[x "y"]
    z = others
[root@localhost demo]# GIT_CONFIG=test.ini git config a.b.c.d 'hello, world'
[root@localhost demo]# GIT_CONFIG=test.ini git config a.b.c.d
hello, world


[root@localhost demo]# git config --unset --global user.name
[root@localhost demo]# git config --unset --global user.email
[root@localhost demo]# git config user.name
[root@localhost demo]# git config user.email
[root@localhost demo]# git commit --allow-empty -m 'who does commit?'
[master 980b032] who does commit?
 Committer: root <root@localhost.localdomain>
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name "Your Name"
    git config --global user.email you@example.com

If the identity used for this commit is wrong, you can fix it with:

    git commit --amend --author='Your Name <you@example.com>'

 1 files changed, 1 insertions(+), 0 deletions(-)
[root@localhost demo]# git log --pretty=fuller
commit 980b032efd2cd34a7abf072bba81df6b0e5210c1
Author:     root <root@localhost.localdomain>
AuthorDate: Wed Jul 20 16:47:26 2016 +0000
Commit:     root <root@localhost.localdomain>
CommitDate: Wed Jul 20 16:47:26 2016 +0000

    who does commit?

commit a58e7abce3285544fd869604ac69990b53355b92
Author:     root <root@localhost.localdomain>
AuthorDate: Tue Jul 19 16:17:26 2016 +0000
Commit:     root <root@localhost.localdomain>
CommitDate: Tue Jul 19 16:17:26 2016 +0000

    init
[root@localhost demo]# git config --global user.name 'cqg'
[root@localhost demo]# git config --global user.email 'a@b.com'
[root@localhost demo]# git commit --amend --allow-empty --reset-author
[master 0a3097f] who does commit?
 1 files changed, 1 insertions(+), 0 deletions(-)
[root@localhost demo]# git log --pretty=fuller
commit 0a3097f57de7976d73709715fd8cc33b3757118e
Author:     cqg <a@b.com>
AuthorDate: Wed Jul 20 16:49:17 2016 +0000
Commit:     cqg <a@b.com>
CommitDate: Wed Jul 20 16:49:17 2016 +0000

    who does commit?

commit a58e7abce3285544fd869604ac69990b53355b92
Author:     root <root@localhost.localdomain>
AuthorDate: Tue Jul 19 16:17:26 2016 +0000
Commit:     root <root@localhost.localdomain>
CommitDate: Tue Jul 19 16:17:26 2016 +0000

    init
备份
[root@localhost demo]# cd /path/to/my/workspace/
[root@localhost workspace]# git clone demo demo-step-1
Initialized empty Git repository in /path/to/my/workspace/demo-step-1/.git/

chapter 5

# git log --stat
commit 0a3097f57de7976d73709715fd8cc33b3757118e
Author: cqg <a@b.com>
Date:   Wed Jul 20 16:49:17 2016 +0000

    who does commit?

 welcome.txt |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)

commit a58e7abce3285544fd869604ac69990b53355b92
Author: root <root@localhost.localdomain>
Date:   Tue Jul 19 16:17:26 2016 +0000

    init

 welcome.txt |    1 +
 1 files changed, 1 insertions(+), 0 deletions(-)
[root@localhost demo]# echo "Nice to meet you.">>welcome.txt 
[root@localhost demo]# git diff
diff --git a/welcome.txt b/welcome.txt
index e8577ea..2d6f839 100644
--- a/welcome.txt
+++ b/welcome.txt
@@ -1,2 +1,3 @@
 Hello.
 Bye-Bye.
+Nice to meet you.
[root@localhost demo]# git commit -m 'append a nice line.'
# On branch master
# Changed but not updated:
#   (use "git add <file>..." to update what will be committed)
#   (use "git checkout -- <file>..." to discard changes in working directory)
#
#   modified:   welcome.txt
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#   a/
#   test.ini
no changes added to commit (use "git add" and/or "git commit -a")
[root@localhost demo]# git log --pretty=oneline
0a3097f57de7976d73709715fd8cc33b3757118e who does commit?
a58e7abce3285544fd869604ac69990b53355b92 init
[root@localhost demo]# git status -s 
 M welcome.txt
?? a/
?? test.ini
[root@localhost demo]# git add welcome.txt 
[root@localhost demo]# git diff 
[root@localhost demo]# git diff HEAD
diff --git a/welcome.txt b/welcome.txt
index e8577ea..2d6f839 100644
--- a/welcome.txt
+++ b/welcome.txt
@@ -1,2 +1,3 @@
 Hello.
 Bye-Bye.
+Nice to meet you.
[root@localhost demo]# git status
# On branch master
# Changes to be committed:
#   (use "git reset HEAD <file>..." to unstage)
#
#   modified:   welcome.txt
#
# Untracked files:
#   (use "git add <file>..." to include in what will be committed)
#
#   a/
#   test.ini
[root@localhost demo]# git status -s
M  welcome.txt
?? a/
?? test.ini

[root@localhost demo]# git clean -fd
Removing a/
Removing test.ini
[root@localhost demo]# git checkout
[root@localhost demo]# echo 'bye-bye.' >> welcome.txt 
[root@localhost demo]# mkdir -p a/b/c
[root@localhost demo]# echo 'hello.' > a/b/c/hello.txt
[root@localhost demo]# git add .
[root@localhost demo]# echo 'bye-bye.' >> a/b/c/hello.txt 
[root@localhost demo]# git status -s
AM a/b/c/hello.txt
M  welcome.txt
显示缓存区目录树
[root@localhost demo]# git ls-files -s
100644 25735f595470e0e6894159694a4238a3ee8a3df0 0   a/b/c/hello.txt
100644 c02d318f4581d89f4d5a91f332075fab0d79cf32 0   welcome.txt










